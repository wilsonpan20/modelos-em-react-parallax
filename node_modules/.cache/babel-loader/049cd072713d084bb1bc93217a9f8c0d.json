{"ast":null,"code":"var _jsxFileName = \"/home/wilson/projetosParticular/yt-react-parallax/src/components/core/AnimatedFade.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Easing from '../../utils/Easing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnimatedFade = _ref => {\n  _s();\n\n  let {\n    children,\n    duration = 1000,\n    frame = 16,\n    startOpacity = 0,\n    endOpacity = 1,\n    ease = Easing.easeInOutQuad\n  } = _ref;\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    const tΔ = 1 * frame / duration;\n    let t = 0;\n    let timeout = 0;\n\n    const tick = () => {\n      clearTimeout(timeout);\n      const val = ease(t * endOpacity + (1 - t) * startOpacity, startOpacity, endOpacity, 1);\n      setOpacity(val);\n      t += tΔ;\n      t = clamp(t);\n\n      if (t < 1) {\n        timeout = setTimeout(() => {\n          tick();\n        }, frame);\n      }\n    };\n\n    tick();\n  }, [setOpacity, duration, frame, startOpacity, endOpacity, ease]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      opacity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AnimatedFade, \"Ga86qnrIhwUCt0/dxb3hKUM4P9I=\");\n\n_c = AnimatedFade;\n\nconst clamp = function () {\n  let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedFade\");","map":{"version":3,"sources":["/home/wilson/projetosParticular/yt-react-parallax/src/components/core/AnimatedFade.js"],"names":["useEffect","useState","Easing","AnimatedFade","children","duration","frame","startOpacity","endOpacity","ease","easeInOutQuad","opacity","setOpacity","tΔ","t","timeout","tick","clearTimeout","val","clamp","setTimeout","min","max","Math"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAOtB;AAAA;;AAAA,MAPuB;AAC3BC,IAAAA,QAD2B;AAE3BC,IAAAA,QAAQ,GAAG,IAFgB;AAG3BC,IAAAA,KAAK,GAAG,EAHmB;AAI3BC,IAAAA,YAAY,GAAG,CAJY;AAK3BC,IAAAA,UAAU,GAAG,CALc;AAM3BC,IAAAA,IAAI,GAAGP,MAAM,CAACQ;AANa,GAOvB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,EAAE,GAAI,IAAIP,KAAL,GAAcD,QAAzB;AACA,QAAIS,CAAC,GAAG,CAAR;AAEA,QAAIC,OAAO,GAAG,CAAd;;AACA,UAAMC,IAAI,GAAG,MAAM;AACjBC,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACA,YAAMG,GAAG,GAAGT,IAAI,CAACK,CAAC,GAAGN,UAAJ,GAAiB,CAAC,IAAIM,CAAL,IAAUP,YAA5B,EAA0CA,YAA1C,EAAwDC,UAAxD,EAAoE,CAApE,CAAhB;AACAI,MAAAA,UAAU,CAACM,GAAD,CAAV;AACAJ,MAAAA,CAAC,IAAID,EAAL;AACAC,MAAAA,CAAC,GAAGK,KAAK,CAACL,CAAD,CAAT;;AAEA,UAAIA,CAAC,GAAG,CAAR,EAAW;AACTC,QAAAA,OAAO,GAAGK,UAAU,CAAC,MAAM;AACzBJ,UAAAA,IAAI;AACL,SAFmB,EAEjBV,KAFiB,CAApB;AAGD;AACF,KAZD;;AAaAU,IAAAA,IAAI;AACL,GAnBQ,EAmBN,CAACJ,UAAD,EAAaP,QAAb,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,UAA5C,EAAwDC,IAAxD,CAnBM,CAAT;AAqBA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA;AAAF,KAAZ;AAAA,cAA0BP;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCM;;GAAMD,Y;;KAAAA,Y;;AAkCb,MAAMgB,KAAK,GAAG,YAA+B;AAAA,MAA9BD,GAA8B,uEAAxB,CAAwB;AAAA,MAArBG,GAAqB,uEAAf,CAAe;AAAA,MAAZC,GAAY,uEAAN,CAAM;AAC3C,SAAOC,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASJ,GAAT,EAAcG,GAAd,CAAT,EAA6BC,GAA7B,CAAP;AACD,CAFD","sourcesContent":["import { useEffect, useState } from 'react';\nimport Easing from '../../utils/Easing';\n\nexport const AnimatedFade = ({\n  children,\n  duration = 1000,\n  frame = 16,\n  startOpacity = 0,\n  endOpacity = 1,\n  ease = Easing.easeInOutQuad,\n}) => {\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    const tΔ = (1 * frame) / duration;\n    let t = 0;\n\n    let timeout = 0;\n    const tick = () => {\n      clearTimeout(timeout);\n      const val = ease(t * endOpacity + (1 - t) * startOpacity, startOpacity, endOpacity, 1);\n      setOpacity(val);\n      t += tΔ;\n      t = clamp(t);\n\n      if (t < 1) {\n        timeout = setTimeout(() => {\n          tick();\n        }, frame);\n      }\n    };\n    tick();\n  }, [setOpacity, duration, frame, startOpacity, endOpacity, ease]);\n\n  return <div style={{ opacity }}>{children}</div>;\n};\n\nconst clamp = (val = 0, min = 0, max = 1) => {\n  return Math.min(Math.max(val, min), max);\n};\n"]},"metadata":{},"sourceType":"module"}