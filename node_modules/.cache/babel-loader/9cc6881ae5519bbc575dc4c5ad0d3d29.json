{"ast":null,"code":"const Easing = {};\n\nEasing.linear = function easeLinear() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * (elapsed /= duration) + initialValue;\n};\n\nEasing.easeInQuad = function easeInQuad() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * (elapsed /= duration) * elapsed + initialValue;\n};\n\nEasing.easeOutQuad = function easeOutQuad() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return -amountOfChange * (elapsed /= duration) * (elapsed - 2) + initialValue;\n};\n\nEasing.easeInOutQuad = function easeInOutQuad() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * elapsed * elapsed + initialValue;\n  }\n\n  return -amountOfChange / 2 * (--elapsed * (elapsed - 2) - 1) + initialValue;\n};\n\nEasing.easeInCubic = function easeInCubic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutCubic = function easeOutCubic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed + 1) + initialValue;\n};\n\nEasing.easeInOutCubic = function easeInOutCubic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * elapsed * elapsed * elapsed + initialValue;\n  }\n\n  return amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed + 2) + initialValue;\n};\n\nEasing.easeInQuart = function easeInQuart() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutQuart = function easeOutQuart() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return -amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed - 1) + initialValue;\n};\n\nEasing.easeInOutQuart = function easeInOutQuart() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * elapsed * elapsed * elapsed * elapsed + initialValue;\n  }\n\n  return -amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed * elapsed - 2) + initialValue;\n};\n\nEasing.easeInQuint = function easeInQuint() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutQuint = function easeOutQuint() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed * elapsed + 1) + initialValue;\n};\n\nEasing.easeInOutQuint = function easeInOutQuint() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * elapsed * elapsed * elapsed * elapsed * elapsed + initialValue;\n  }\n\n  return amountOfChange / 2 * ((elapsed -= 2) * elapsed * elapsed * elapsed * elapsed + 2) + initialValue;\n};\n\nEasing.easeInSine = function easeInSine() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return -amountOfChange * Math.cos(elapsed / duration * (Math.PI / 2)) + amountOfChange + initialValue;\n};\n\nEasing.easeOutSine = function easeOutSine() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * Math.sin(elapsed / duration * (Math.PI / 2)) + initialValue;\n};\n\nEasing.easeInOutSine = function easeInOutSine() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return -amountOfChange / 2 * (Math.cos(Math.PI * elapsed / duration) - 1) + initialValue;\n};\n\nEasing.easeInExpo = function easeInExpo() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return elapsed === 0 ? initialValue : amountOfChange * Math.pow(2, 10 * (elapsed / duration - 1)) + initialValue;\n};\n\nEasing.easeOutExpo = function easeOutExpo() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return elapsed === duration ? initialValue + amountOfChange : amountOfChange * (-Math.pow(2, -10 * elapsed / duration) + 1) + initialValue;\n};\n\nEasing.easeInOutExpo = function easeInOutExpo() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (elapsed === 0) {\n    return initialValue;\n  }\n\n  if (elapsed === duration) {\n    return initialValue + amountOfChange;\n  }\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * Math.pow(2, 10 * (elapsed - 1)) + initialValue;\n  }\n\n  return amountOfChange / 2 * (-Math.pow(2, -10 * --elapsed) + 2) + initialValue;\n};\n\nEasing.easeInCirc = function easeInCirc() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return -amountOfChange * (Math.sqrt(1 - (elapsed /= duration) * elapsed) - 1) + initialValue;\n};\n\nEasing.easeOutCirc = function easeOutCirc() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange * Math.sqrt(1 - (elapsed = elapsed / duration - 1) * elapsed) + initialValue;\n};\n\nEasing.easeInOutCirc = function easeInOutCirc() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return -amountOfChange / 2 * (Math.sqrt(1 - elapsed * elapsed) - 1) + initialValue;\n  }\n\n  return amountOfChange / 2 * (Math.sqrt(1 - (elapsed -= 2) * elapsed) + 1) + initialValue;\n};\n\nEasing.easeInElastic = function easeInElastic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n\n  if (elapsed === 0) {\n    return initialValue;\n  }\n\n  if ((elapsed /= duration) === 1) {\n    return initialValue + amountOfChange;\n  }\n\n  if (!p) {\n    p = duration * 0.3;\n  }\n\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);\n  }\n\n  return -(a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p)) + initialValue;\n};\n\nEasing.easeOutElastic = function easeOutElastic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n\n  if (elapsed === 0) {\n    return initialValue;\n  }\n\n  if ((elapsed /= duration) === 1) {\n    return initialValue + amountOfChange;\n  }\n\n  if (!p) {\n    p = duration * 0.3;\n  }\n\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);\n  }\n\n  return a * Math.pow(2, -10 * elapsed) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p) + amountOfChange + initialValue;\n};\n\nEasing.easeInOutElastic = function easeInOutElastic() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n\n  if (elapsed === 0) {\n    return initialValue;\n  }\n\n  if ((elapsed /= duration / 2) === 2) {\n    return initialValue + amountOfChange;\n  }\n\n  if (!p) {\n    p = duration * (0.3 * 1.5);\n  }\n\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(amountOfChange / a);\n  }\n\n  if (elapsed < 1) {\n    return -0.5 * (a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p)) + initialValue;\n  }\n\n  return a * Math.pow(2, -10 * (elapsed -= 1)) * Math.sin((elapsed * duration - s) * (2 * Math.PI) / p) * 0.5 + amountOfChange + initialValue;\n};\n\nEasing.easeInBack = function easeInBack() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;\n  return amountOfChange * (elapsed /= duration) * elapsed * ((s + 1) * elapsed - s) + initialValue;\n};\n\nEasing.easeOutBack = function easeOutBack() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;\n  return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * ((s + 1) * elapsed + s) + 1) + initialValue;\n};\n\nEasing.easeInOutBack = function easeInOutBack() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;\n\n  if ((elapsed /= duration / 2) < 1) {\n    return amountOfChange / 2 * (elapsed * elapsed * (((s *= 1.525) + 1) * elapsed - s)) + initialValue;\n  }\n\n  return amountOfChange / 2 * ((elapsed -= 2) * elapsed * (((s *= 1.525) + 1) * elapsed + s) + 2) + initialValue;\n};\n\nEasing.easeInBounce = function easeInBounce() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return amountOfChange - Easing.easeOutBounce(duration - elapsed, 0, amountOfChange, duration) + initialValue;\n};\n\nEasing.easeOutBounce = function easeOutBounce() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if ((elapsed /= duration) < 1 / 2.75) {\n    return amountOfChange * (7.5625 * elapsed * elapsed) + initialValue;\n  } else if (elapsed < 2 / 2.75) {\n    return amountOfChange * (7.5625 * (elapsed -= 1.5 / 2.75) * elapsed + 0.75) + initialValue;\n  } else if (elapsed < 2.5 / 2.75) {\n    return amountOfChange * (7.5625 * (elapsed -= 2.25 / 2.75) * elapsed + 0.9375) + initialValue;\n  } else {\n    return amountOfChange * (7.5625 * (elapsed -= 2.625 / 2.75) * elapsed + 0.984375) + initialValue;\n  }\n};\n\nEasing.easeInOutBounce = function easeInOutBounce() {\n  let elapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let amountOfChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (elapsed < duration / 2) {\n    return Easing.easeInBounce(elapsed * 2, 0, amountOfChange, duration) * 0.5 + initialValue;\n  }\n\n  return Easing.easeOutBounce(elapsed * 2 - duration, 0, amountOfChange, duration) * 0.5 + amountOfChange * 0.5 + initialValue;\n};\n\nexport default Easing;","map":{"version":3,"sources":["/home/wilson/projetosParticular/yt-react-parallax/src/utils/Easing.js"],"names":["Easing","linear","easeLinear","elapsed","initialValue","amountOfChange","duration","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","s","p","a","abs","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce"],"mappings":"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","sourcesContent":["const Easing = {};\n\nEasing.linear = function easeLinear(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * (elapsed /= duration) + initialValue;\n};\n\nEasing.easeInQuad = function easeInQuad(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * (elapsed /= duration) * elapsed + initialValue;\n};\n\nEasing.easeOutQuad = function easeOutQuad(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return -amountOfChange * (elapsed /= duration) * (elapsed - 2) + initialValue;\n};\n\nEasing.easeInOutQuad = function easeInOutQuad(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * elapsed * elapsed + initialValue;\n  }\n  return (-amountOfChange / 2) * (--elapsed * (elapsed - 2) - 1) + initialValue;\n};\n\nEasing.easeInCubic = function easeInCubic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutCubic = function easeOutCubic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed + 1) + initialValue;\n};\n\nEasing.easeInOutCubic = function easeInOutCubic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * elapsed * elapsed * elapsed + initialValue;\n  }\n  return (amountOfChange / 2) * ((elapsed -= 2) * elapsed * elapsed + 2) + initialValue;\n};\n\nEasing.easeInQuart = function easeInQuart(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutQuart = function easeOutQuart(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return -amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed - 1) + initialValue;\n};\n\nEasing.easeInOutQuart = function easeInOutQuart(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * elapsed * elapsed * elapsed * elapsed + initialValue;\n  }\n  return (-amountOfChange / 2) * ((elapsed -= 2) * elapsed * elapsed * elapsed - 2) + initialValue;\n};\n\nEasing.easeInQuint = function easeInQuint(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * (elapsed /= duration) * elapsed * elapsed * elapsed * elapsed + initialValue;\n};\n\nEasing.easeOutQuint = function easeOutQuint(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return (\n    amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * elapsed * elapsed * elapsed + 1) + initialValue\n  );\n};\n\nEasing.easeInOutQuint = function easeInOutQuint(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * elapsed * elapsed * elapsed * elapsed * elapsed + initialValue;\n  }\n  return (amountOfChange / 2) * ((elapsed -= 2) * elapsed * elapsed * elapsed * elapsed + 2) + initialValue;\n};\n\nEasing.easeInSine = function easeInSine(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return -amountOfChange * Math.cos((elapsed / duration) * (Math.PI / 2)) + amountOfChange + initialValue;\n};\n\nEasing.easeOutSine = function easeOutSine(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * Math.sin((elapsed / duration) * (Math.PI / 2)) + initialValue;\n};\n\nEasing.easeInOutSine = function easeInOutSine(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return (-amountOfChange / 2) * (Math.cos((Math.PI * elapsed) / duration) - 1) + initialValue;\n};\n\nEasing.easeInExpo = function easeInExpo(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return elapsed === 0 ? initialValue : amountOfChange * Math.pow(2, 10 * (elapsed / duration - 1)) + initialValue;\n};\n\nEasing.easeOutExpo = function easeOutExpo(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return elapsed === duration\n    ? initialValue + amountOfChange\n    : amountOfChange * (-Math.pow(2, (-10 * elapsed) / duration) + 1) + initialValue;\n};\n\nEasing.easeInOutExpo = function easeInOutExpo(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if (elapsed === 0) {\n    return initialValue;\n  }\n  if (elapsed === duration) {\n    return initialValue + amountOfChange;\n  }\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * Math.pow(2, 10 * (elapsed - 1)) + initialValue;\n  }\n  return (amountOfChange / 2) * (-Math.pow(2, -10 * --elapsed) + 2) + initialValue;\n};\n\nEasing.easeInCirc = function easeInCirc(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return -amountOfChange * (Math.sqrt(1 - (elapsed /= duration) * elapsed) - 1) + initialValue;\n};\n\nEasing.easeOutCirc = function easeOutCirc(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange * Math.sqrt(1 - (elapsed = elapsed / duration - 1) * elapsed) + initialValue;\n};\n\nEasing.easeInOutCirc = function easeInOutCirc(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (-amountOfChange / 2) * (Math.sqrt(1 - elapsed * elapsed) - 1) + initialValue;\n  }\n  return (amountOfChange / 2) * (Math.sqrt(1 - (elapsed -= 2) * elapsed) + 1) + initialValue;\n};\n\nEasing.easeInElastic = function easeInElastic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n  if (elapsed === 0) {\n    return initialValue;\n  }\n  if ((elapsed /= duration) === 1) {\n    return initialValue + amountOfChange;\n  }\n  if (!p) {\n    p = duration * 0.3;\n  }\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = (p / (2 * Math.PI)) * Math.asin(amountOfChange / a);\n  }\n  return (\n    -(a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin(((elapsed * duration - s) * (2 * Math.PI)) / p)) + initialValue\n  );\n};\n\nEasing.easeOutElastic = function easeOutElastic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n  if (elapsed === 0) {\n    return initialValue;\n  }\n  if ((elapsed /= duration) === 1) {\n    return initialValue + amountOfChange;\n  }\n  if (!p) {\n    p = duration * 0.3;\n  }\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = (p / (2 * Math.PI)) * Math.asin(amountOfChange / a);\n  }\n  return (\n    a * Math.pow(2, -10 * elapsed) * Math.sin(((elapsed * duration - s) * (2 * Math.PI)) / p) +\n    amountOfChange +\n    initialValue\n  );\n};\n\nEasing.easeInOutElastic = function easeInOutElastic(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  let s = 1.70158;\n  let p = 0;\n  let a = amountOfChange;\n  if (elapsed === 0) {\n    return initialValue;\n  }\n  if ((elapsed /= duration / 2) === 2) {\n    return initialValue + amountOfChange;\n  }\n  if (!p) {\n    p = duration * (0.3 * 1.5);\n  }\n  if (a < Math.abs(amountOfChange)) {\n    a = amountOfChange;\n    s = p / 4;\n  } else {\n    s = (p / (2 * Math.PI)) * Math.asin(amountOfChange / a);\n  }\n  if (elapsed < 1) {\n    return (\n      -0.5 * (a * Math.pow(2, 10 * (elapsed -= 1)) * Math.sin(((elapsed * duration - s) * (2 * Math.PI)) / p)) +\n      initialValue\n    );\n  }\n  return (\n    a * Math.pow(2, -10 * (elapsed -= 1)) * Math.sin(((elapsed * duration - s) * (2 * Math.PI)) / p) * 0.5 +\n    amountOfChange +\n    initialValue\n  );\n};\n\nEasing.easeInBack = function easeInBack(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0, s = 1.70158) {\n  return amountOfChange * (elapsed /= duration) * elapsed * ((s + 1) * elapsed - s) + initialValue;\n};\n\nEasing.easeOutBack = function easeOutBack(\n  elapsed = 0,\n  initialValue = 0,\n  amountOfChange = 0,\n  duration = 0,\n  s = 1.70158,\n) {\n  return amountOfChange * ((elapsed = elapsed / duration - 1) * elapsed * ((s + 1) * elapsed + s) + 1) + initialValue;\n};\n\nEasing.easeInOutBack = function easeInOutBack(\n  elapsed = 0,\n  initialValue = 0,\n  amountOfChange = 0,\n  duration = 0,\n  s = 1.70158,\n) {\n  if ((elapsed /= duration / 2) < 1) {\n    return (amountOfChange / 2) * (elapsed * elapsed * (((s *= 1.525) + 1) * elapsed - s)) + initialValue;\n  }\n  return (amountOfChange / 2) * ((elapsed -= 2) * elapsed * (((s *= 1.525) + 1) * elapsed + s) + 2) + initialValue;\n};\n\nEasing.easeInBounce = function easeInBounce(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  return amountOfChange - Easing.easeOutBounce(duration - elapsed, 0, amountOfChange, duration) + initialValue;\n};\n\nEasing.easeOutBounce = function easeOutBounce(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if ((elapsed /= duration) < 1 / 2.75) {\n    return amountOfChange * (7.5625 * elapsed * elapsed) + initialValue;\n  } else if (elapsed < 2 / 2.75) {\n    return amountOfChange * (7.5625 * (elapsed -= 1.5 / 2.75) * elapsed + 0.75) + initialValue;\n  } else if (elapsed < 2.5 / 2.75) {\n    return amountOfChange * (7.5625 * (elapsed -= 2.25 / 2.75) * elapsed + 0.9375) + initialValue;\n  } else {\n    return amountOfChange * (7.5625 * (elapsed -= 2.625 / 2.75) * elapsed + 0.984375) + initialValue;\n  }\n};\n\nEasing.easeInOutBounce = function easeInOutBounce(elapsed = 0, initialValue = 0, amountOfChange = 0, duration = 0) {\n  if (elapsed < duration / 2) {\n    return Easing.easeInBounce(elapsed * 2, 0, amountOfChange, duration) * 0.5 + initialValue;\n  }\n  return (\n    Easing.easeOutBounce(elapsed * 2 - duration, 0, amountOfChange, duration) * 0.5 +\n    amountOfChange * 0.5 +\n    initialValue\n  );\n};\n\nexport default Easing;\n"]},"metadata":{},"sourceType":"module"}