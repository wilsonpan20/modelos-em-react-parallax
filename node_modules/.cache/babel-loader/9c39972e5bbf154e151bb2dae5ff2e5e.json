{"ast":null,"code":"var _jsxFileName = \"/home/wilson/projetosParticular/yt-react-parallax/src/components/interactive/ControlTranslate.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useGlobalMouseMove } from '../../hooks/useGlobalMouseMove';\nimport Easing from '../../utils/Easing';\nimport { ScrollableAreaContext } from './ScrollableArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ControlTranslate = _ref => {\n  _s();\n\n  let {\n    children,\n    className,\n    scrollFromX = 0,\n    scrollFromY = 0,\n    scrollToX = 0,\n    scrollToY = 0,\n    mouseOffsetX = 0,\n    mouseOffsetY = 0,\n    ease = Easing.linear,\n    style = {}\n  } = _ref;\n  const [mouseX, mouseY] = useGlobalMouseMove();\n  const pctProgress = useContext(ScrollableAreaContext) || 0;\n  const easedProgress = ease(pctProgress, 0, 1, 1);\n  const inverse = 1 - easedProgress;\n  const x = scrollFromX * inverse + scrollToX * easedProgress + mouseOffsetX * mouseX;\n  const y = scrollFromY * inverse + scrollToY * easedProgress + mouseOffsetY * mouseY;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      transform: `translate3d(${x}px, ${y}px, 0px)`,\n      transformStyle: 'preserve-3d',\n      ...style\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ControlTranslate, \"iLUvrWRyk3CqVsWosqKqANAWrOY=\", false, function () {\n  return [useGlobalMouseMove];\n});\n\n_c = ControlTranslate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlTranslate\");","map":{"version":3,"sources":["/home/wilson/projetosParticular/yt-react-parallax/src/components/interactive/ControlTranslate.js"],"names":["useContext","useGlobalMouseMove","Easing","ScrollableAreaContext","ControlTranslate","children","className","scrollFromX","scrollFromY","scrollToX","scrollToY","mouseOffsetX","mouseOffsetY","ease","linear","style","mouseX","mouseY","pctProgress","easedProgress","inverse","x","y","transform","transformStyle"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,QAW1B;AAAA;;AAAA,MAX2B;AAC/BC,IAAAA,QAD+B;AAE/BC,IAAAA,SAF+B;AAG/BC,IAAAA,WAAW,GAAG,CAHiB;AAI/BC,IAAAA,WAAW,GAAG,CAJiB;AAK/BC,IAAAA,SAAS,GAAG,CALmB;AAM/BC,IAAAA,SAAS,GAAG,CANmB;AAO/BC,IAAAA,YAAY,GAAG,CAPgB;AAQ/BC,IAAAA,YAAY,GAAG,CARgB;AAS/BC,IAAAA,IAAI,GAAGX,MAAM,CAACY,MATiB;AAU/BC,IAAAA,KAAK,GAAG;AAVuB,GAW3B;AACJ,QAAM,CAACC,MAAD,EAASC,MAAT,IAAmBhB,kBAAkB,EAA3C;AACA,QAAMiB,WAAW,GAAGlB,UAAU,CAACG,qBAAD,CAAV,IAAqC,CAAzD;AAEA,QAAMgB,aAAa,GAAGN,IAAI,CAACK,WAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAA1B;AACA,QAAME,OAAO,GAAG,IAAID,aAApB;AAEA,QAAME,CAAC,GAAGd,WAAW,GAAGa,OAAd,GAAwBX,SAAS,GAAGU,aAApC,GAAoDR,YAAY,GAAGK,MAA7E;AACA,QAAMM,CAAC,GAAGd,WAAW,GAAGY,OAAd,GAAwBV,SAAS,GAAGS,aAApC,GAAoDP,YAAY,GAAGK,MAA7E;AAEA,sBACE;AACE,IAAA,SAAS,EAAEX,SADb;AAEE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAG,eAAcF,CAAE,OAAMC,CAAE,UAAtC;AAAiDE,MAAAA,cAAc,EAAE,aAAjE;AAAgF,SAAGT;AAAnF,KAFT;AAAA,cAIGV;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BM;;GAAMD,gB;UAYcH,kB;;;KAZdG,gB","sourcesContent":["import { useContext } from 'react';\nimport { useGlobalMouseMove } from '../../hooks/useGlobalMouseMove';\nimport Easing from '../../utils/Easing';\nimport { ScrollableAreaContext } from './ScrollableArea';\n\nexport const ControlTranslate = ({\n  children,\n  className,\n  scrollFromX = 0,\n  scrollFromY = 0,\n  scrollToX = 0,\n  scrollToY = 0,\n  mouseOffsetX = 0,\n  mouseOffsetY = 0,\n  ease = Easing.linear,\n  style = {},\n}) => {\n  const [mouseX, mouseY] = useGlobalMouseMove();\n  const pctProgress = useContext(ScrollableAreaContext) || 0;\n\n  const easedProgress = ease(pctProgress, 0, 1, 1);\n  const inverse = 1 - easedProgress;\n\n  const x = scrollFromX * inverse + scrollToX * easedProgress + mouseOffsetX * mouseX;\n  const y = scrollFromY * inverse + scrollToY * easedProgress + mouseOffsetY * mouseY;\n\n  return (\n    <div\n      className={className}\n      style={{ transform: `translate3d(${x}px, ${y}px, 0px)`, transformStyle: 'preserve-3d', ...style }}\n    >\n      {children}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}